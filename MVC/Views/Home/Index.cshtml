@model MVC.Models.Company

@{
    Layout = null;
    ViewBag.Title = "Index1";
}

<h2>Countries List</h2>

<ul>
    @foreach (string strCountry in ViewBag.Countries)
    {
        <li>@strCountry</li>
    }
</ul>

<br />

<ul>
    @foreach (string strCountry1 in (List<string>)ViewData["Countries"])
    {
        <li>@strCountry1</li>
    }
</ul>

<h3>HTML Helpers</h3>

<h3>Textbox</h3>
@Html.TextBox("firstname", "John", new { style = "background-color:Red; color:White; font-weight:bold", title = "Please enter your first name" })
<br />
<h5>Read only</h5>
@Html.TextBox("firstname", "John", new { @class = "redtextbox", @readonly = "true" })
<br />
<h5>To generate a label for "First Name"</h5>
@Html.Label("fisrtname", "First Name")
<br />
<h5>To generate a textbox to enter password, so that the input is masked</h5>
@Html.Password("Password")
<br />
<h5>To generate a multi-line textbox. 5 lines 20 columns</h5>
@Html.TextArea("Comments", "", 5, 20, null)
<br />
<h5>To generate a hidden textbox</h5>
@Html.Hidden("id")


<h3>Drop Down Lists</h3>
<h5>Hard coded list</h5>
@Html.DropDownList("Departments", new List<SelectListItem>
{
    new SelectListItem { Text = "IT", Value = "1", Selected=true},
    new SelectListItem { Text = "HR", Value = "2"},
    new SelectListItem { Text = "Payroll", Value = "3"}
}, "Select Department") 

<h5>From server</h5>
@*Name from view bag*@
@Html.DropDownList("departmentsOneoff", "Select Department") 


<h3>Text Box vs Text Box For</h3>
Html.TextBox amd Html.DropDownList are not strongly typed
<br />
@Html.TextBoxFor(m => m.CompanyName)
<br />
@Html.DropDownListFor(m => m.Departments, new SelectList(Model.Departments, "Id", "Name"), "Select Department")


<h3>Radio button html helper (Also example of Html ActionLink)</h3>
@Html.ActionLink("Radio Html Helper","Index2", "Home")

<h3>Also example of listing Raw HTML</h3>
@Html.Raw("Next space <br> Some html text <br>")

<h3>Check box html helper</h3>
@Html.ActionLink("Check Box Html Helper", "Index3", "Home")

<h3>List Box box html helper</h3>
@Html.ActionLink("List Box Html Helper", "Index4", "Home")

<h3>Advantages of Stringly typed views</h3>
<h3>With ViewBag and Dynamic type no checking</h3>
@Html.ActionLink("Advantages of Stringly typed views", "Index5", "Home",new { id = "1" }, null)

<h3>Partial view</h3>
@Html.ActionLink("Partial view", "Index6", "Home")

<h3>Render Partial and Partial view differences</h3>
<h5>The return type of "RenderPartial" is void, where as "Partial" returns "MvcHtmlString"</h5>
<h5>Syntax for invoking Partial() and RenderPartial() methods in Razor views</h5>
@Html.ActionLink("Render Partial view", "Index7", "Home")

<h3>Razor view syntax</h3>
@Html.ActionLink("Razor view syntax", "Index8", "Home")

<h3>Layout view in mvc</h3>
<h5>Maintain consistentlook and feel</h5>
@Html.ActionLink("Layout view in mvc", "Index9", "Home")